definitions:
  dto.AuthorResponse:
    properties:
      biography:
        type: string
      birth_date:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  dto.BookResponse:
    properties:
      author_id:
        type: integer
      description:
        type: string
      id:
        type: integer
      isbn:
        type: string
      publication_year:
        type: integer
      title:
        type: string
    type: object
  dto.CreateAuthorRequest:
    properties:
      biography:
        type: string
      birth_date:
        type: string
      name:
        type: string
    required:
    - biography
    - birth_date
    - name
    type: object
  dto.CreateBookRequest:
    properties:
      author_id:
        type: integer
      description:
        type: string
      isbn:
        type: string
      publication_year:
        type: integer
      title:
        type: string
    required:
    - author_id
    - description
    - isbn
    - publication_year
    - title
    type: object
  dto.CreateReviewRequest:
    properties:
      book_id:
        type: integer
      comment:
        type: string
      rating:
        maximum: 5
        minimum: 1
        type: integer
    required:
    - book_id
    - comment
    - rating
    type: object
  dto.ReviewResponse:
    properties:
      book_id:
        type: integer
      comment:
        type: string
      date_posted:
        type: string
      id:
        type: integer
      rating:
        type: integer
    type: object
  dto.UpdateAuthorRequest:
    properties:
      biography:
        type: string
      birth_date:
        type: string
      name:
        type: string
    type: object
  dto.UpdateBookRequest:
    properties:
      author_id:
        type: integer
      description:
        type: string
      isbn:
        type: string
      publication_year:
        type: integer
      title:
        type: string
    type: object
  dto.UpdateReviewRequest:
    properties:
      comment:
        type: string
      rating:
        maximum: 5
        minimum: 1
        type: integer
    type: object
info:
  contact: {}
paths:
  /api/v1/authors:
    get:
      consumes:
      - application/json
      description: Get a list of all authors
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.AuthorResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all authors
      tags:
      - authors
    post:
      consumes:
      - application/json
      description: Create a new author with the input payload
      parameters:
      - description: Create author
        in: body
        name: author
        required: true
        schema:
          $ref: '#/definitions/dto.CreateAuthorRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.AuthorResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new author
      tags:
      - authors
  /api/v1/authors/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an author by given id
      parameters:
      - description: Author ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete an author
      tags:
      - authors
    get:
      consumes:
      - application/json
      description: Get an author by given id
      parameters:
      - description: Author ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.AuthorResponse'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get specific author info
      tags:
      - authors
    put:
      consumes:
      - application/json
      description: Update an author with the input payload
      parameters:
      - description: Author ID
        in: path
        name: id
        required: true
        type: string
      - description: Update author
        in: body
        name: author
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateAuthorRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.AuthorResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update an author
      tags:
      - authors
  /api/v1/books:
    get:
      consumes:
      - application/json
      description: Get a list of all books in the system
      produces:
      - application/json
      responses:
        "200":
          description: There are no books in the system
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all books
      tags:
      - books
    post:
      consumes:
      - application/json
      description: Create a new book with the input payload
      parameters:
      - description: Create book
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/dto.CreateBookRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.BookResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new book
      tags:
      - books
  /api/v1/books/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a book by its ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a book
      tags:
      - books
    get:
      consumes:
      - application/json
      description: Get a book by its ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.BookResponse'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a specific book
      tags:
      - books
    put:
      consumes:
      - application/json
      description: Update a book with the input payload
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: string
      - description: Update book
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateBookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.BookResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a book
      tags:
      - books
  /api/v1/books/{id}/reviews:
    get:
      consumes:
      - application/json
      description: Get a list of reviews for a book by its ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.ReviewResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get reviews for a specific book
      tags:
      - reviews
    post:
      consumes:
      - application/json
      description: Create a new review for a book
      parameters:
      - description: Create review
        in: body
        name: review
        required: true
        schema:
          $ref: '#/definitions/dto.CreateReviewRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.ReviewResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new review
      tags:
      - reviews
  /api/v1/reviews/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a review by its ID
      parameters:
      - description: Review ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a review
      tags:
      - reviews
    put:
      consumes:
      - application/json
      description: Update a review by its ID
      parameters:
      - description: Review ID
        in: path
        name: id
        required: true
        type: string
      - description: Update review
        in: body
        name: review
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateReviewRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ReviewResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a review
      tags:
      - reviews
swagger: "2.0"
